{"ast":null,"code":"import _slicedToArray from\"/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import'@fortawesome/free-solid-svg-icons';import{useState}from'react';import Button from'@material-ui/core/Button';import SpecificUserModal from\"../SpecificUsernameModal/specificUserModal\";/**\n * Represents the list of all the username cards \n * @param {*} usernames All the usernames and their objects based on the usernames\n *                      that the client inputted into the search bar\n * @returns the Usernames object\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Usernames=function Usernames(_ref){var usernames=_ref.usernames;/**\n     * States:\n     *      openModal: represents whether the modal is open or closed\n     *      isClicked: the current username object that is clicked\n     *      displayCount: the number of usernames that are displayed\n     */var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openModal=_useState2[0],setOpenModal=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),isClicked=_useState4[0],setIsClicked=_useState4[1];var _useState5=useState(10),_useState6=_slicedToArray(_useState5,2),displayCount=_useState6[0],setDisplayCount=_useState6[1];/**\n     * Callback method to handle opening of a particular user's modal\n     * @param {*} username the username whose modal we want to open\n     */var handleOpenModal=function handleOpenModal(username){// set the isClicked object to be that of the username we're looking for\nsetIsClicked(usernames.find(function(x){return x.username===username;}));// set the state variable to be open\nsetOpenModal(true);};/**\n     * Closes the modal in question\n     */var handleCloseModal=function handleCloseModal(e){// we only close if we click outside the modal or the 'x' button in \n// the modal\nif(e.target.id==='wrapper'||e.target.id==='close_modal_button'){// sets the 'open' state variable to false\nsetOpenModal(false);// nullify the object in question\nsetIsClicked([]);// reset the display count.\nsetDisplayCount(10);}};return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center flex-wrap\",children:usernames.map(function(each){return/*#__PURE__*/_jsx(\"div\",{id:each.username,className:\"inline-block flex-row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-4 max-w-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-lg h-full bg-[#2b3945] dark:bg-slate-50 p-8 flex-col shadow-lg \",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-12 h-12 mt-1 mr-3 inline-flex items-center justify-center rounded-full text-white flex-shrink-0\",children:/*#__PURE__*/_jsx(\"img\",{src:each.userInformation.avatarUrl,alt:\"avatar image for\"+each.userInformation.name,width:\"1000\",height:\"1000\",className:\"rounded-full\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-black text-lg font-medium dark:text-black text-white\",children:/*#__PURE__*/_jsxs(\"a\",{href:'https://github.com/'+each.username,target:\"_blank\",rel:\"noreferrer\",children:[each.username,\" \"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm dark:text-black text-white\",children:each.userInformation.name}),each.userInformation.location!==null?/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm dark:text-black text-white\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fa-solid fa-location-dot\"}),\" \",each.userInformation.location]}):/*#__PURE__*/_jsx(\"span\",{})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:\"dark:text-black text-white\",onClick:function onClick(){return handleOpenModal(each.username);},children:\"Show public repositories\"}),openModal?/*#__PURE__*/_jsx(SpecificUserModal,{isClicked:isClicked,handleCloseModal:handleCloseModal,displayCount:displayCount,setDisplayCount:setDisplayCount}):/*#__PURE__*/_jsx(_Fragment,{})]})]})})},each.username);})});};export default Usernames;","map":{"version":3,"names":["React","useState","Button","SpecificUserModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Usernames","_ref","usernames","_useState","_useState2","_slicedToArray","openModal","setOpenModal","_useState3","_useState4","isClicked","setIsClicked","_useState5","_useState6","displayCount","setDisplayCount","handleOpenModal","username","find","x","handleCloseModal","e","target","id","className","children","map","each","src","userInformation","avatarUrl","alt","name","width","height","href","rel","location","class","onClick"],"sources":["/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/src/components/Usernames/usernames.jsx"],"sourcesContent":["import React from \"react\";\nimport '@fortawesome/free-solid-svg-icons'\nimport {useState} from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport SpecificUserModal from \"../SpecificUsernameModal/specificUserModal\";\n\n/**\n * Represents the list of all the username cards \n * @param {*} usernames All the usernames and their objects based on the usernames\n *                      that the client inputted into the search bar\n * @returns the Usernames object\n */\nconst Usernames = ({usernames}) => {\n\n    /**\n     * States:\n     *      openModal: represents whether the modal is open or closed\n     *      isClicked: the current username object that is clicked\n     *      displayCount: the number of usernames that are displayed\n     */\n    const [openModal, setOpenModal] = useState(false);\n    const [isClicked, setIsClicked] = useState([]);\n    const [displayCount, setDisplayCount] = useState(10);\n\n\n    /**\n     * Callback method to handle opening of a particular user's modal\n     * @param {*} username the username whose modal we want to open\n     */\n    const handleOpenModal = (username) => {\n        // set the isClicked object to be that of the username we're looking for\n        setIsClicked(usernames.find(x => x.username === username));\n\n        // set the state variable to be open\n        setOpenModal(true);\n    }\n\n    /**\n     * Closes the modal in question\n     */\n    const handleCloseModal = (e) => {\n\n        // we only close if we click outside the modal or the 'x' button in \n        // the modal\n        if (e.target.id === 'wrapper' || e.target.id === 'close_modal_button') {\n            // sets the 'open' state variable to false\n            setOpenModal(false);\n\n            // nullify the object in question\n            setIsClicked([]);\n\n            // reset the display count.\n            setDisplayCount(10);\n        }\n        \n    }\n\n    return (\n        <div className='flex justify-center flex-wrap'>\n            {usernames.map((each) => (\n                <div id={each.username} className='inline-block flex-row' key={each.username}>\n                    <div className='p-4 max-w-sm'>\n                        <div className='rounded-lg h-full bg-[#2b3945] dark:bg-slate-50 p-8 flex-col shadow-lg '>\n                        <div className='flex items-center mb-3'>\n                            <div className='w-12 h-12 mt-1 mr-3 inline-flex items-center justify-center rounded-full text-white flex-shrink-0'>\n                                <img src={each.userInformation.avatarUrl} alt={\"avatar image for\" + each.userInformation.name} width=\"1000\" height=\"1000\" className='rounded-full'></img>\n                            </div>\n                            <div>\n                                <h2 className='text-black text-lg font-medium dark:text-black text-white'><a href={'https://github.com/' + each.username} target='_blank' rel='noreferrer'>{each.username} </a></h2>\n                                <div className='flex flex-col'>\n                                    <span className='text-sm dark:text-black text-white'>{each.userInformation.name}</span>\n                                    {each.userInformation.location !== null ? <span className='text-sm dark:text-black text-white'><i class=\"fa-solid fa-location-dot\"></i> {each.userInformation.location}</span> : <span></span>}\n                                </div>\n                            </div>\n                        </div>\n\n                            <div>\n                                <Button className='dark:text-black text-white' onClick={() => handleOpenModal(each.username)}>Show public repositories</Button>\n                                {openModal ? \n                                <SpecificUserModal isClicked={isClicked} handleCloseModal={handleCloseModal} displayCount={displayCount} setDisplayCount={setDisplayCount}/>\n                                : <></>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Usernames;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}