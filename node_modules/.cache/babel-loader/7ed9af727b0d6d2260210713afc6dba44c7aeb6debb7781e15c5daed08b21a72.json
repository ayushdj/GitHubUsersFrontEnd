{"ast":null,"code":"var _jsxFileName = \"/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/src/components/Usernames/usernames.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport SpecificUserModal from \"../SpecificUsernameModal/specificUserModal\";\n\n/**\n * Represents the list of all the username cards \n * @param {*} usernames All the usernames and their objects based on the usernames\n *                      that the client inputted into the search bar\n * @returns the Usernames object\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Usernames = _ref => {\n  _s();\n  let {\n    usernames\n  } = _ref;\n  /**\n   * States:\n   *      openModal: represents whether the modal is open or closed\n   *      isClicked: the current username object that is clicked\n   *      displayCount: the number of usernames that are displayed\n   */\n  const [openModal, setOpenModal] = useState(false);\n  const [isClicked, setIsClicked] = useState([]);\n  const [displayCount, setDisplayCount] = useState(10);\n\n  /**\n   * Callback method to handle opening of a particular user's modal\n   * @param {*} username the username whose modal we want to open\n   */\n  const handleOpenModal = username => {\n    // set the isClicked object to be that of the username we're looking for\n    setIsClicked(usernames.find(x => x.username === username));\n\n    // set the state variable to be open\n    setOpenModal(true);\n  };\n\n  /**\n   * Closes the modal in question\n   */\n  const handleCloseModal = e => {\n    // we only close if we click outside the modal or the 'x' button in \n    // the modal\n    if (e.target.id === 'wrapper' || e.target.id === 'close_modal_button') {\n      // sets the 'open' state variable to false\n      setOpenModal(false);\n\n      // nullify the object in question\n      setIsClicked([]);\n\n      // reset the display count.\n      setDisplayCount(10);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center flex-wrap\",\n    children: usernames.map(each => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: each.username,\n      className: \"inline-block flex-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 max-w-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-lg h-full bg-[#2b3945] dark:bg-slate-50 p-8 flex-col shadow-lg \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 h-12 mt-1 mr-3 inline-flex items-center justify-center rounded-full text-white flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: each.userInformation.avatarUrl,\n                alt: \"avatar image for\" + each.userInformation.name,\n                width: \"1000\",\n                height: \"1000\",\n                className: \"rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-black text-lg font-medium dark:text-black text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: 'https://github.com/' + each.username,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: [each.username, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 107\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm dark:text-black text-white\",\n                  children: each.userInformation.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), each.userInformation.location !== null ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm dark:text-black text-white\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-location-dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 132\n                  }, this), \" \", each.userInformation.location]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 79\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 214\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"dark:text-black text-white\",\n              onClick: () => handleOpenModal(each.username),\n              children: \"Show public repositories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), openModal ? /*#__PURE__*/_jsxDEV(SpecificUserModal, {\n              isClicked: isClicked,\n              handleCloseModal: handleCloseModal,\n              displayCount: displayCount,\n              setDisplayCount: setDisplayCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, each.username, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Usernames, \"xA4aL6T6+Ek/H94CkU3hdnw0YLM=\");\n_c = Usernames;\nexport default Usernames;\nvar _c;\n$RefreshReg$(_c, \"Usernames\");","map":{"version":3,"names":["React","useState","Button","SpecificUserModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Usernames","_ref","_s","usernames","openModal","setOpenModal","isClicked","setIsClicked","displayCount","setDisplayCount","handleOpenModal","username","find","x","handleCloseModal","e","target","id","className","children","map","each","src","userInformation","avatarUrl","alt","name","width","height","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","location","class","onClick","_c","$RefreshReg$"],"sources":["/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/src/components/Usernames/usernames.jsx"],"sourcesContent":["import React from \"react\";\nimport '@fortawesome/free-solid-svg-icons'\nimport {useState} from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport SpecificUserModal from \"../SpecificUsernameModal/specificUserModal\";\n\n/**\n * Represents the list of all the username cards \n * @param {*} usernames All the usernames and their objects based on the usernames\n *                      that the client inputted into the search bar\n * @returns the Usernames object\n */\nconst Usernames = ({usernames}) => {\n\n    /**\n     * States:\n     *      openModal: represents whether the modal is open or closed\n     *      isClicked: the current username object that is clicked\n     *      displayCount: the number of usernames that are displayed\n     */\n    const [openModal, setOpenModal] = useState(false);\n    const [isClicked, setIsClicked] = useState([]);\n    const [displayCount, setDisplayCount] = useState(10);\n\n\n    /**\n     * Callback method to handle opening of a particular user's modal\n     * @param {*} username the username whose modal we want to open\n     */\n    const handleOpenModal = (username) => {\n        // set the isClicked object to be that of the username we're looking for\n        setIsClicked(usernames.find(x => x.username === username));\n\n        // set the state variable to be open\n        setOpenModal(true);\n    }\n\n    /**\n     * Closes the modal in question\n     */\n    const handleCloseModal = (e) => {\n\n        // we only close if we click outside the modal or the 'x' button in \n        // the modal\n        if (e.target.id === 'wrapper' || e.target.id === 'close_modal_button') {\n            // sets the 'open' state variable to false\n            setOpenModal(false);\n\n            // nullify the object in question\n            setIsClicked([]);\n\n            // reset the display count.\n            setDisplayCount(10);\n        }\n        \n    }\n\n    return (\n        <div className='flex justify-center flex-wrap'>\n            {usernames.map((each) => (\n                <div id={each.username} className='inline-block flex-row' key={each.username}>\n                    <div className='p-4 max-w-sm'>\n                        <div className='rounded-lg h-full bg-[#2b3945] dark:bg-slate-50 p-8 flex-col shadow-lg '>\n                        <div className='flex items-center mb-3'>\n                            <div className='w-12 h-12 mt-1 mr-3 inline-flex items-center justify-center rounded-full text-white flex-shrink-0'>\n                                <img src={each.userInformation.avatarUrl} alt={\"avatar image for\" + each.userInformation.name} width=\"1000\" height=\"1000\" className='rounded-full'></img>\n                            </div>\n                            <div>\n                                <h2 className='text-black text-lg font-medium dark:text-black text-white'><a href={'https://github.com/' + each.username} target='_blank' rel='noreferrer'>{each.username} </a></h2>\n                                <div className='flex flex-col'>\n                                    <span className='text-sm dark:text-black text-white'>{each.userInformation.name}</span>\n                                    {each.userInformation.location !== null ? <span className='text-sm dark:text-black text-white'><i class=\"fa-solid fa-location-dot\"></i> {each.userInformation.location}</span> : <span></span>}\n                                </div>\n                            </div>\n                        </div>\n\n                            <div>\n                                <Button className='dark:text-black text-white' onClick={() => handleOpenModal(each.username)}>Show public repositories</Button>\n                                {openModal ? \n                                <SpecificUserModal isClicked={isClicked} handleCloseModal={handleCloseModal} displayCount={displayCount} setDisplayCount={setDisplayCount}/>\n                                : <></>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Usernames;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}