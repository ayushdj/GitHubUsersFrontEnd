{"ast":null,"code":"import axios from 'axios';\nconst usernamesUrl = \"http://127.0.0.1:5000/api/v1/users\";\n\n/**\n * This function makes a call to the api set up by the backend \n * and parses the results.\n * @param {} usernames the usernames list\n */\nasync function getRepoNames(usernames) {\n  /*\n      need to pass in a string as the query parameters, so we need\n      to create that string. We loop over all the objects in the usernames\n      list and in each object, we extract the userName field.  \n  */\n  let joinedString = \"\";\n  for (let i = 0; i < usernames.length; i++) {\n    joinedString += usernames[i].userName;\n    if (i !== usernames.length - 1) {\n      joinedString += \",\";\n    }\n  }\n\n  /*\n      Make the get request and pass in query parameters, and extract\n      the data\n  */\n  let response = await axios.get(usernamesUrl, {\n    params: {\n      users: joinedString\n    }\n  });\n  return response.data;\n}\n\n// async function getUserData(username) {\n//     // let response = await axios.get(base)\n// }\n\nconst functions = {\n  getRepoNames\n};\nexport default functions;","map":{"version":3,"names":["axios","usernamesUrl","getRepoNames","usernames","joinedString","i","length","userName","response","get","params","users","data","functions"],"sources":["/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsers/github-users-client/src/api/service.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst usernamesUrl = \"http://127.0.0.1:5000/api/v1/users\"\n\n/**\n * This function makes a call to the api set up by the backend \n * and parses the results.\n * @param {} usernames the usernames list\n */\nasync function getRepoNames(usernames) {\n    /*\n        need to pass in a string as the query parameters, so we need\n        to create that string. We loop over all the objects in the usernames\n        list and in each object, we extract the userName field.  \n    */\n    let joinedString = \"\";\n    for (let i = 0; i < usernames.length; i++) {\n        joinedString += usernames[i].userName;\n        if (i !== usernames.length - 1) {\n            joinedString += \",\";\n        }\n    }\n\n    /*\n        Make the get request and pass in query parameters, and extract\n        the data\n    */\n    let response = await axios.get(usernamesUrl, {\n        params: {\n            users: joinedString\n        }\n    });\n    return response.data;\n}\n\n// async function getUserData(username) {\n//     // let response = await axios.get(base)\n// }\n\n\nconst functions = {getRepoNames}\n\nexport default functions;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,oCAAoC;;AAEzD;AACA;AACA;AACA;AACA;AACA,eAAeC,YAAYA,CAACC,SAAS,EAAE;EACnC;AACJ;AACA;AACA;AACA;EACI,IAAIC,YAAY,GAAG,EAAE;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACvCD,YAAY,IAAID,SAAS,CAACE,CAAC,CAAC,CAACE,QAAQ;IACrC,IAAIF,CAAC,KAAKF,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;MAC5BF,YAAY,IAAI,GAAG;IACvB;EACJ;;EAEA;AACJ;AACA;AACA;EACI,IAAII,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACR,YAAY,EAAE;IACzCS,MAAM,EAAE;MACJC,KAAK,EAAEP;IACX;EACJ,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACxB;;AAEA;AACA;AACA;;AAGA,MAAMC,SAAS,GAAG;EAACX;AAAY,CAAC;AAEhC,eAAeW,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}