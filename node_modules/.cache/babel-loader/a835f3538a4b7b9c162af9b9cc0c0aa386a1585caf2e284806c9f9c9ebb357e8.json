{"ast":null,"code":"var _jsxFileName = \"/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsers/github-users-client/src/components/Header/header.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport '@fortawesome/free-solid-svg-icons';\nimport { useState, useEffect } from 'react';\n\n/**\n * This function represents the Header component of the application. It is\n * also responsible for handling the light and dark modes of the application.\n * \n * @returns the Header component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  // extract the current theme from local storage\n  let currTheme = localStorage.getItem(\"github_theme_mode\");\n\n  // define a state variable for the light and dark mode\n  const [theme, setTheme] = useState(currTheme !== undefined ? currTheme : \"light\");\n\n  // on loading this page, the theme is set to either dark or \n  // light based on what the value of `theme` is initially from\n  // local storage. \n  useEffect(() => {\n    if (theme === 'dark') {\n      document.documentElement.classList.add(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      localStorage.setItem('github_theme_mode', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      document.body.style.backgroundColor = 'hsl(207, 26%, 17%)';\n      localStorage.setItem('github_theme_mode', 'light');\n    }\n  }, [theme]);\n\n  /**\n   * A callback for setting the `theme` state variable. \n   */\n  const handleThemeSwitch = () => {\n    if (theme === \"dark\") {\n      setTheme(\"light\");\n    } else {\n      setTheme(\"dark\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"lg:w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100% shadow-lg py-5 px-2 mb-16 bg-[#2b3945] dark:bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex container mx-auto dark:text-black text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-brands fa-github pt-[6px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold md:text-l dark:text-black text-white lg:text-xl pl-2\",\n          children: \"GitHub User Public Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto font-medium md:text-l lg:text-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"lg:text-md\",\n            onClick: () => handleThemeSwitch(),\n            children: [\" \", theme === 'dark' ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-moon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 78\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-sun\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 117\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"\",\n              children: theme === 'dark' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Dark Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 62\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Light Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"6zv9zJWFgDrK3dAbIP83E+2yXxE=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Header","_s","currTheme","localStorage","getItem","theme","setTheme","undefined","document","documentElement","classList","add","body","style","backgroundColor","setItem","remove","handleThemeSwitch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsers/github-users-client/src/components/Header/header.jsx"],"sourcesContent":["import React from \"react\";\nimport '@fortawesome/free-solid-svg-icons'\nimport {useState, useEffect} from 'react';\n\n/**\n * This function represents the Header component of the application. It is\n * also responsible for handling the light and dark modes of the application.\n * \n * @returns the Header component\n */\nconst Header = () => {\n\n  // extract the current theme from local storage\n  let currTheme = localStorage.getItem(\"github_theme_mode\");\n\n  // define a state variable for the light and dark mode\n  const [theme, setTheme] = useState(currTheme !== undefined ? currTheme : \"light\");\n\n  // on loading this page, the theme is set to either dark or \n  // light based on what the value of `theme` is initially from\n  // local storage. \n  useEffect(() => {\n      if (theme === 'dark') {\n          document.documentElement.classList.add(\"dark\");\n          document.body.style.backgroundColor = \"white\"\n          localStorage.setItem('github_theme_mode', 'dark');\n      } else {\n          document.documentElement.classList.remove('dark');\n          document.body.style.backgroundColor = 'hsl(207, 26%, 17%)'\n          localStorage.setItem('github_theme_mode', 'light');\n      }\n  }, [theme])\n\n  /**\n   * A callback for setting the `theme` state variable. \n   */\n  const handleThemeSwitch = () => {\n      if (theme === \"dark\") {\n          setTheme(\"light\");\n      } else {\n          setTheme(\"dark\");\n      }\n  }\n\n  return (\n    <nav className='lg:w-full'>\n      <div className='w-100% shadow-lg py-5 px-2 mb-16 bg-[#2b3945] dark:bg-white'>\n        <div className=\"flex container mx-auto dark:text-black text-white\">\n          <i className='fa-brands fa-github pt-[6px]'></i>\n          <h1 className=\"font-bold md:text-l dark:text-black text-white lg:text-xl pl-2\">GitHub User Public Repositories</h1>\n          <div className=\"ml-auto font-medium md:text-l lg:text-xl\">\n            <button className=\"lg:text-md\" \n                      onClick={() => handleThemeSwitch()}> {theme==='dark' ? <i className=\"fa-solid fa-moon\"></i> : <i className=\"fa-solid fa-sun\"> </i>}\n                      <span className=\"\">{theme === 'dark' ? <span> Dark Mode</span> : <span> Light Mode</span>}</span></button>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n  );\n}\n\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}