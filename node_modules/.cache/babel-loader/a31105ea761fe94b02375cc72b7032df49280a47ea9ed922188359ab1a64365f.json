{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';// const usernamesUrl = \"http://127.0.0.1:5000/api/v1/users\"\nvar usernamesUrl=\"https://g8dv38abqi.execute-api.us-west-2.amazonaws.com\";/**\n * This function makes a call to the api set up by the backend \n * and parses the results.\n * @param {} usernames the usernames list\n */function getRepoNames(_x){return _getRepoNames.apply(this,arguments);}// async function getUserData(username) {\n//     // let response = await axios.get(base)\n// }\nfunction _getRepoNames(){_getRepoNames=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(usernames){var joinedString,i,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:/*\n        need to pass in a string as the query parameters, so we need\n        to create that string. We loop over all the objects in the usernames\n        list and in each object, we extract the userName field.  \n    */joinedString=\"\";for(i=0;i<usernames.length;i++){joinedString+=usernames[i].userName;if(i!==usernames.length-1){joinedString+=\",\";}}/*\n        Make the get request and pass in query parameters, and extract\n        the data\n    */_context.next=4;return axios.get(usernamesUrl,{params:{users:joinedString}});case 4:response=_context.sent;return _context.abrupt(\"return\",response.data);case 6:case\"end\":return _context.stop();}},_callee);}));return _getRepoNames.apply(this,arguments);}var functions={getRepoNames:getRepoNames};export default functions;","map":{"version":3,"names":["axios","usernamesUrl","getRepoNames","_x","_getRepoNames","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","usernames","joinedString","i","response","wrap","_callee$","_context","prev","next","length","userName","get","params","users","sent","abrupt","data","stop","functions"],"sources":["/Users/ayushdhananjai/Documents/PersonalProjects/GitHubUsersFrontEnd/src/api/service.js"],"sourcesContent":["import axios from 'axios';\n\n\n// const usernamesUrl = \"http://127.0.0.1:5000/api/v1/users\"\nconst usernamesUrl = \"https://g8dv38abqi.execute-api.us-west-2.amazonaws.com\"\n\n/**\n * This function makes a call to the api set up by the backend \n * and parses the results.\n * @param {} usernames the usernames list\n */\nasync function getRepoNames(usernames) {\n    /*\n        need to pass in a string as the query parameters, so we need\n        to create that string. We loop over all the objects in the usernames\n        list and in each object, we extract the userName field.  \n    */\n    let joinedString = \"\";\n    for (let i = 0; i < usernames.length; i++) {\n        joinedString += usernames[i].userName;\n        if (i !== usernames.length - 1) {\n            joinedString += \",\";\n        }\n    }\n\n    /*\n        Make the get request and pass in query parameters, and extract\n        the data\n    */\n    let response = await axios.get(usernamesUrl, {\n        params: {\n            users: joinedString\n        }\n    });\n    return response.data;\n}\n\n// async function getUserData(username) {\n//     // let response = await axios.get(base)\n// }\n\n\nconst functions = {getRepoNames}\n\nexport default functions;"],"mappings":"oUAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB;AACA,GAAM,CAAAC,YAAY,CAAG,wDAAwD,CAE7E;AACA;AACA;AACA;AACA,GAJA,QAKe,CAAAC,YAAYA,CAAAC,EAAA,SAAAC,aAAA,CAAAC,KAAA,MAAAC,SAAA,GA0B3B;AACA;AACA;AAAA,SAAAF,cAAA,EAAAA,aAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CA5BA,SAAAC,QAA4BC,SAAS,MAAAC,YAAA,CAAAC,CAAA,CAAAC,QAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACjC;AACJ;AACA;AACA;AACA,MACQP,YAAY,CAAG,EAAE,CACrB,IAASC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,SAAS,CAACS,MAAM,CAAEP,CAAC,EAAE,CAAE,CACvCD,YAAY,EAAID,SAAS,CAACE,CAAC,CAAC,CAACQ,QAAQ,CACrC,GAAIR,CAAC,GAAKF,SAAS,CAACS,MAAM,CAAG,CAAC,CAAE,CAC5BR,YAAY,EAAI,GAAG,CACvB,CACJ,CAEA;AACJ;AACA;AACA,MAHIK,QAAA,CAAAE,IAAA,SAIqB,CAAAnB,KAAK,CAACsB,GAAG,CAACrB,YAAY,CAAE,CACzCsB,MAAM,CAAE,CACJC,KAAK,CAAEZ,YACX,CACJ,CAAC,CAAC,QAJEE,QAAQ,CAAAG,QAAA,CAAAQ,IAAA,QAAAR,QAAA,CAAAS,MAAA,UAKLZ,QAAQ,CAACa,IAAI,0BAAAV,QAAA,CAAAW,IAAA,MAAAlB,OAAA,GACvB,UAAAN,aAAA,CAAAC,KAAA,MAAAC,SAAA,GAOD,GAAM,CAAAuB,SAAS,CAAG,CAAC3B,YAAY,CAAZA,YAAY,CAAC,CAEhC,cAAe,CAAA2B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}